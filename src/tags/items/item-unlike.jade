item-unlike
  div(onclick='{postunlike}').wrap-item.f.fm
    div.wrap-icon.mr4.f.fm
      i.icon-unlike
    div.label.f.fm
      p Unlike: 
      p {counter}

  style(scoped, type='less').
    @import "public/stylesheets/main.less";
    @import "public/stylesheets/theme.less";
    :scope {
      &.pushed {
        pointer-events: none;
        .wrap-icon {
          pointer-events: none;
          i {
            color: @primaryBlack !important;
          }
        }
        p {
          color: @primaryBlack !important;
          pointer-events: none;
        } 
      }
      .wrap-item {
        color: #bbb;
        .wrap-icon {
          i {
            font-size: 24px;
            margin-left: -4px;
          }
        }
      }
    }

  script.

    var self = this;

    this.on('mount', function(){

    });

    this.unlikes = [];

    this.counter = 0;

    // unlikeする
    this.postunlike = function(e){

      e.stopPropagation();

      var unlikeObj = {
        from: session.user.uid,
        to: this.opts.post.postId,
        createdAt: new Date(),
        post: this.opts.post
      };
      
      service.db.collection("unlikes").add(unlikeObj)
        .then(function(docRef) {
          console.log("Document written with ID: ", docRef.id);
        })
        .catch(function(error) {
          console.error("Error adding document: ", error);
          alert('Failed to Post');
        });

      this.counter++;
      this.update();

      // 押された状態にする
      this.root.classList.add('pushed');

    }

    service.db.collection("unlikes")
      .where("to", "==", self.opts.post.postId)
      .orderBy("createdAt", 'desc')
      .get().then(function(querySnapshot) {
        var posts = [];
        querySnapshot.forEach(function(doc) {
          if(doc.id){
            var data = doc.data();
            self.unlikes.push(data);

            if(data.from==session.user.uid){
              // 押された状態にする
              self.root.classList.add('pushed');
            }
          }
        });
        self.counter = self.unlikes.length;
        riot.update();
    });

