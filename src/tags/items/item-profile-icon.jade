item-profile-icon(data-doc-id='{docId}')
  div.wrap-item.py40
    div.wrap-icon.f.fh
      div.wrap-icon-content
        div.f.fc
          img(src='{iconSrc}').mb8
        p.name.mb16 {this.name}
        div.mb16.f.fc
          atom-hack-in(uid='{uid}')
        p.profile {this.profile}

  style(scoped, type='less').
    @import "public/stylesheets/main.less";
    @import "public/stylesheets/theme.less";
    :scope {
      .wrap-item {
        width: 100%;
        background: @primaryBg;
        .wrap-icon {
          width: 100%;
          .wrap-icon-content {
            width: 80%;
            max-width: 300px;
            img {
              border-radius: 50%;
              width: 120px;
              height: 120px;
            }
            .name {
              text-align: center;
              font-weight: bold;
              letter-spacing: 1px;
            }
            .profile {
              text-align: center;
              letter-spacing: 1px;
            }
          }
        }
      }
    }

  script.
    
    var self = this;

    // console.log('opts.uid', opts.uid);

    var uid = opts.uid;
    this.uid = uid;

    if(uid){
      service.db.collection("users")
        .where("uid", "==", uid)
        .limit(1)
        .get()
        .then(function(querySnapshot) {
          querySnapshot.forEach(function(doc) {
            //console.log(doc.uid, " => ", doc.data());
            var user;
            if(doc.data().uid == uid){ 
              user = doc.data();
              self.iconSrc = user.imgUrl;
              self.name = user.name;
              self.profile = user.profileHistory[user.profileHistory.length-1];
              self.update();
            }
          });

      }).catch(function(error) {
        console.log("Error getting documents: ", error);
      });
    } // if(uid)

