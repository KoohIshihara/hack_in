page-follow
  div.wrap-page
    module-user-list(each='{item in listContents}', content='{item}')

  style(scoped, type='less').
    @import "public/stylesheets/main.less";
    @import "public/stylesheets/theme.less";
    :scope {
      .wrap-page {
        width: 100%;
        height: 100%;
        background: @primaryBg;
      }
    }

  script.

    var self = this;
    this.uids;
    this.users = [];
    this.listContents = [];

    this.on('mount', function(){
      $('modal-content').addClass('show');
      $('modal-content').scrollTop(0);

      // 次の画面遷移時にフェードインを防止
      riot.enableFadeIn = false;

      $(document).on("custom:close", function() {
        $('modal-content').removeClass('show');
        self.unmount(true);
      });
    });

    async function init() {

      $('#loadingForModal').fadeIn(400);

      var uid = opts.__proto__.uid;
      await service.db.collection("follows")
        .where("from", "==", uid)
        .get()
        .then(function(querySnapshot) {          
          var uids = [];
          querySnapshot.forEach(function(doc) {
            var data = doc.data();
            uids.push(data.to);
          });
          self.uids = uids;
        }).catch(function(error) {
          //logout();
          console.log("Error getting documents: ", error);
        });
      

      var promises = self.uids.map(uid =>{
        return service.db.collection("users")
          .where('uid', '==', uid)
          .limit(1)
          .get()
          .then(function(querySnapshot){
            return querySnapshot.docs[0].data();
          });
      })

      self.users = await Promise.all(promises);

      /*
      for(var i in self.uids){
        await service.db.collection("users")
          .where('uid', '==', self.uids[i])
          .limit(1)
          .get()
          .then(function(querySnapshot){
            self.users.push(querySnapshot.docs[0].data());
          });
      }
      */

      for(var i in self.users){
        var listObj = {
          uid: self.users[i].uid,
          name: self.users[i].name,
          imgUrl: self.users[i].imgUrl
        };
        self.listContents.push(listObj);
      }

      self.update();

      $('#loadingForModal').fadeOut(400);

    }

    init();
    
